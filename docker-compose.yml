version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend

  frontend-dev:
    image: node:20-alpine
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    command: sh -c "npm ci && npx vite --host 0.0.0.0 --port 5173"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_media:/app/media
    environment:
      - DEBUG=1
      - SECRET_KEY=development_secret_key
      - DATABASE_URL=postgres://postgres:postgres@db:5432/qrcheckin
      - ALLOWED_HOSTS=*
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://frontend:3000
      # Email Settings - Uncomment and set these for SMTP email, or leave console backend for development
      # For development (logs emails to console):
      - EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
      # For production with Gmail (uncomment these lines and fill in your details):
      # - EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      # - EMAIL_HOST=smtp.gmail.com
      # - EMAIL_PORT=587
      # - EMAIL_USE_TLS=True
      # - EMAIL_HOST_USER=your-email@gmail.com
      # - EMAIL_HOST_PASSWORD=your-app-password
      # - DEFAULT_FROM_EMAIL=your-email@gmail.com
      # For default from email when using console backend:
      - DEFAULT_FROM_EMAIL=noreply@qrcheckin.example.com
      - BASE_URL=http://localhost:8000
    depends_on:
      - db

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=qrcheckin

volumes:
  postgres_data:
  backend_media: