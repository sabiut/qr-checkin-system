name: Claude PR Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ github.token }}
          fetch-depth: 0
          
      - name: Setup Python for review script
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          pip install anthropic requests
          
      - name: Run Claude Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.number }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          python3 << 'EOF'
          import os
          import anthropic
          import requests
          import json
          from pathlib import Path
          
          def get_pr_diff():
              """Get the diff for this PR"""
              headers = {
                  'Authorization': f'token {os.environ["GITHUB_TOKEN"]}',
                  'Accept': 'application/vnd.github.v3.diff'
              }

              # Use the correct GitHub API endpoint for PR diff
              url = f'https://api.github.com/repos/{os.environ["REPO_OWNER"]}/{os.environ["REPO_NAME"]}/pulls/{os.environ["PR_NUMBER"]}'
              response = requests.get(url, headers=headers)

              if response.status_code == 200:
                  return response.text
              else:
                  print(f"Failed to get PR diff: {response.status_code}")
                  print(f"Response: {response.text}")

                  # Fallback: try to get PR files instead
                  print("Trying alternative approach with PR files...")
                  files_url = f'https://api.github.com/repos/{os.environ["REPO_OWNER"]}/{os.environ["REPO_NAME"]}/pulls/{os.environ["PR_NUMBER"]}/files'
                  files_headers = {
                      'Authorization': f'token {os.environ["GITHUB_TOKEN"]}',
                      'Accept': 'application/vnd.github.v3+json'
                  }

                  files_response = requests.get(files_url, headers=files_headers)
                  if files_response.status_code == 200:
                      files_data = files_response.json()
                      diff_content = ""
                      for file in files_data:
                          if 'patch' in file:
                              diff_content += f"--- a/{file['filename']}\n"
                              diff_content += f"+++ b/{file['filename']}\n"
                              diff_content += file['patch'] + "\n\n"
                      return diff_content if diff_content else None
                  else:
                      print(f"Failed to get PR files: {files_response.status_code}")
                      return None
          
          def review_with_claude(diff_content):
              """Send diff to Claude for review"""
              client = anthropic.Anthropic(api_key=os.environ["ANTHROPIC_API_KEY"])
              
              prompt = f"""Please review this pull request diff and provide constructive feedback focusing on:
          
          1. **Security vulnerabilities** - SQL injection, XSS, authentication issues, data validation
          2. **Code quality** - Best practices, maintainability, readability
          3. **Django/Python best practices** - Model design, view patterns, ORM usage
          4. **Performance issues** - Database queries, caching opportunities, inefficient algorithms
          5. **Architecture concerns** - Design patterns, separation of concerns, modularity
          
          Please be constructive and specific. If you find issues, suggest improvements.
          If the code looks good, highlight what's done well.
          
          Here's the diff:
          
          ```diff
          {diff_content[:50000]}  # Limit to avoid token limits
          ```
          
          Please format your response in markdown with clear sections."""
              
              try:
                  response = client.messages.create(
                      model="claude-3-5-sonnet-20241022",
                      max_tokens=4000,
                      messages=[{"role": "user", "content": prompt}]
                  )
                  return response.content[0].text
              except Exception as e:
                  print(f"Error calling Claude API: {e}")
                  return None
          
          def post_review_comment(review_content):
              """Post the review as a PR comment"""
              headers = {
                  'Authorization': f'token {os.environ["GITHUB_TOKEN"]}',
                  'Accept': 'application/vnd.github.v3+json'
              }
              
              url = f'https://api.github.com/repos/{os.environ["REPO_OWNER"]}/{os.environ["REPO_NAME"]}/issues/{os.environ["PR_NUMBER"]}/comments'
              
              comment_body = f"""## [BOT] Claude Code Review
          
          {review_content}
          
          ---
          *This review was automatically generated by Claude Code AI*"""
              
              data = {"body": comment_body}
              
              response = requests.post(url, headers=headers, json=data)
              
              if response.status_code == 201:
                  print("SUCCESS: Review comment posted successfully!")
              else:
                  print(f"ERROR: Failed to post comment: {response.status_code}")
                  print(response.text)
          
          # Main execution
          if __name__ == "__main__":
              print("Starting Claude Code Review...")
              
              # Get the PR diff
              diff = get_pr_diff()
              if not diff:
                  print("ERROR: Could not get PR diff")
                  exit(1)
              
              print(f"Got diff with {len(diff)} characters")
              
              # Review with Claude
              review = review_with_claude(diff)
              if not review:
                  print("ERROR: Could not get review from Claude")
                  exit(1)
              
              print("SUCCESS: Got review from Claude")
              
              # Post the review
              post_review_comment(review)
              
              print("Claude Code Review completed!")
          EOF